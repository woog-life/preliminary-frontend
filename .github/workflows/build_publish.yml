name: Build and deploy

on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: update tag in manifest.yml
        run: sed -i -e "s#__TAG__#${GITHUB_SHA}#g" values.yaml
      - uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm lint
          kubeconfig: ${{ secrets.KUBECONFIG_RAW }}
      - uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm lint --strict
          kubeconfig: ${{ secrets.KUBECONFIG_RAW }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"
      - run: sed -i -e "s#{{TAG}}#$(echo ${GITHUB_SHA})#g" src/App.fs
      - run: sed -i -e "s/|> Program.withConsoleTrace//g" src/App.fs
      - run: sed -i -e "s#{{API_KEY}}#${{ secrets.OPENWEATHERMAP_APIKEY_RAW }}#g" src/App.fs
      - run: npm install
      - run: npm run prod
      - uses: actions/upload-artifact@v2
        with:
          name: public
          path: public/

  build_push_docker:
    runs-on: ubuntu-latest
    needs: [build, lint]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: public
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the tagged Docker image
        run: docker build -t ghcr.io/woog-life/preliminary-frontend:${GITHUB_SHA} .
      - name: Push the tagged Docker image
        run: docker push ghcr.io/woog-life/preliminary-frontend:${GITHUB_SHA}

  deploy:
    runs-on: ubuntu-latest
    needs: build_push_docker
    steps:
      - uses: actions/checkout@v2
      - name: update tag in manifest.yml
        run: sed -i -e "s#__TAG__#${GITHUB_SHA}#g" values.yaml
      - uses: WyriHaximus/github-action-helm3@v2
        with: 
          exec: helm upgrade preliminary-frontend . --install --namespace=wooglife --atomic
          kubeconfig: ${{ secrets.KUBECONFIG_RAW }}
